server:
  port: 8080
spring:
  application:
    name: "taller-webflux-nequi"
  devtools:
    add-properties: false
  h2:
    console:
      enabled: true
      path: "/h2"
  profiles:
    include: null
  data:
    redis:
      host: "localhost"
      port: 6379

management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
  health:
    circuitbreakers:
      enabled: true
  tracing:
    sampling:
      probability: 0.0
    baggage:
      correlation:
        fields:
          - messageId
      remote-fields: messageId
cors:
  allowed-origins: "http://localhost:4200,http://localhost:8080"
adapters:
  r2dbc:
    host: "localhost"
    port: 5432
    database: "taller_webflux"
    schema: "public"
    username: "postgres"
    password: "admin"
adapter:
  restconsumer:
    timeout: 5000
    url: "https://reqres.in/api/users"
  sqs:
    region: "us-east-1"
    queueUrl: "http://localhost:4566/000000000000/queue-taller-webflux"
    endpoint: "http://localhost:4566"
    accessKey: "test"
    secretKey: "test"
resilience4j:
  circuitbreaker:
    instances:
      testGet:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      testPost:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
entrypoint:
  sqs:
    region: "us-east-1"
    endpoint: "http://localhost:4566"
    queueUrl: "http://localhost:4566/000000000000/queue-taller-webflux"
    waitTimeSeconds: 20
    maxNumberOfMessages: 10
    visibilityTimeoutSeconds: 10
    numberOfThreads: 1
    accessKey: "testAccessKey"
    secretKey: "testSecretKey"
aws:
  region: "us-east-1"
  dynamodb:
    endpoint: "http://localhost:4566"
